{"ast":null,"code":"import _slicedToArray from \"/home/codeyourfuture/cat-age-totaller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/codeyourfuture/cat-age-totaller/src/AgeTotaller.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport AgeCounter from \"./AgeCounter\"; // 6. Add a text input above the AgeCounters in AgeTotaller.js and button.\n// Use this input and button to add a new cat name to the array.\n// You will need to store the new cat name input in state(remember to use onChange to update it)\n// and use the button to add the input to the array of cat names.\n// Remember that you will want to use array destructuring here to create a new array.\n// For example, if you had an array of numbers: `const numbers = [1, 2, 3]`,\n//   you could create a new array like this: `const newNumbers = [...numbers, 4]`.newNumbers would then be[1, 2, 3, 4].\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AgeTotaller = function AgeTotaller() {\n  _s();\n\n  var _useState = useState([\"Garfield\", \"Ollie\", \"Tom\", \"Meowmeow\"]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cats = _useState2[0],\n      setCats = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AgeTotaller\",\n    children: cats.map(function (cat, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cats\",\n        children: /*#__PURE__*/_jsxDEV(AgeCounter, {\n          cat: cat\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AgeTotaller, \"DB+n4ZwJkTfC558tblyHMdW3KmU=\");\n\n_c = AgeTotaller;\nexport default AgeTotaller;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgeTotaller\");","map":{"version":3,"sources":["/home/codeyourfuture/cat-age-totaller/src/AgeTotaller.js"],"names":["React","useState","AgeCounter","AgeTotaller","cats","setCats","map","cat","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;AACE;AACA;AACA;AACA;AACA;AACA;;;;AAEF,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACxB,kBAAwBF,QAAQ,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,EAA6B,UAA7B,CAAD,CAAhC;AAAA;AAAA,MAAOG,IAAP;AAAA,MAAaC,OAAb;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACGD,IAAI,CAACE,GAAL,CAAS,UAACC,GAAD,EAAMC,KAAN;AAAA,0BACR;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,GAAG,EAAED;AAAjB,WAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADQ;AAAA,KAAT;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAXD;;GAAML,W;;KAAAA,W;AAaN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport AgeCounter from \"./AgeCounter\";\n\n// 6. Add a text input above the AgeCounters in AgeTotaller.js and button.\n  // Use this input and button to add a new cat name to the array.\n  // You will need to store the new cat name input in state(remember to use onChange to update it)\n  // and use the button to add the input to the array of cat names.\n  // Remember that you will want to use array destructuring here to create a new array.\n  // For example, if you had an array of numbers: `const numbers = [1, 2, 3]`,\n  //   you could create a new array like this: `const newNumbers = [...numbers, 4]`.newNumbers would then be[1, 2, 3, 4].\n\nconst AgeTotaller = () => {\n  const [cats, setCats] = useState([\"Garfield\", \"Ollie\", \"Tom\", \"Meowmeow\"]);\n  return (\n    <div className=\"AgeTotaller\">\n      {cats.map((cat, index) => (\n        <div className=\"cats\">\n          <AgeCounter cat={cat} key={index} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default AgeTotaller;\n"]},"metadata":{},"sourceType":"module"}