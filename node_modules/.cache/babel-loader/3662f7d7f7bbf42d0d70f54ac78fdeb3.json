{"ast":null,"code":"import _slicedToArray from \"/home/codeyourfuture/cat-age-totaller/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/codeyourfuture/cat-age-totaller/src/AgeCounter.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var AgeCounter = function AgeCounter() {\n  _s();\n\n  var _useState = useState(\"0\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      count = _useState2[0],\n      setCount = _useState2[1];\n\n  var _useState3 = useState(\"0\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      life = _useState4[0],\n      setLife = _useState4[1];\n\n  function incrementCount() {\n    setCount(count + 1);\n  }\n\n  function addLife() {\n    setLife(life + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"AgeCounter\",\n      children: [\" Age count is\", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementCount,\n      children: \"Increment count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onClick: function onClick(event) {\n        return setCount(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addLife,\n      children: \"Add new life\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onClick: function onClick(event) {\n        return setLife(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AgeCounter, \"MR79wTv+ielg6Fo+qhhEoA3cXwY=\");\n\n_c = AgeCounter;\nexport default AgeCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgeCounter\");","map":{"version":3,"sources":["/home/codeyourfuture/cat-age-totaller/src/AgeCounter.js"],"names":["React","useState","AgeCounter","count","setCount","life","setLife","incrementCount","addLife","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAE9B,kBAA0BD,QAAQ,CAAC,GAAD,CAAlC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAwBH,QAAQ,CAAC,GAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AAEA,WAASC,cAAT,GAA0B;AACxBH,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AACD,WAASK,OAAT,GAAmB;AACjBF,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,kCAAyCF,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAQ,MAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,OAAO,EAAE,iBAACE,KAAD;AAAA,eAAWL,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE;AAAQ,MAAA,OAAO,EAAEH,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,eAAWH,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CArBM;;GAAMT,U;;KAAAA,U;AAuBb,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport const AgeCounter = () => {\n\n  const [count, setCount] = useState(\"0\");\n  const [life, setLife] = useState(\"0\");\n\n  function incrementCount() {\n    setCount(count + 1);\n  }\n  function addLife() {\n    setLife(life + 1);\n  }\n\n  return (\n    <div>\n      <h3 className=\"AgeCounter\"> Age count is{count} </h3>\n      <button onClick={incrementCount}>Increment count</button>\n      <input type=\"text\" onClick={(event) => setCount(event.target.value)} />\n      <button onClick={addLife}>Add new life</button>\n      <input type=\"text\" onClick={(event) => setLife(event.target.value)} />\n    </div>\n  );\n};\n\nexport default AgeCounter;\n"]},"metadata":{},"sourceType":"module"}